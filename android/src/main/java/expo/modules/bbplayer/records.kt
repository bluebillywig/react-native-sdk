package expo.modules.bbplayer.records

import com.bluebillywig.bbnativeshared.enums.FitMode
import com.bluebillywig.bbnativeshared.model.ContentItem
import expo.modules.kotlin.records.Field
import expo.modules.kotlin.records.Record
import kotlinx.serialization.json.JsonArray

data class CustomStatisticsRecord(
    @Field val ident: String,
    @Field val ev: String,
    @Field val aux: Map<String, String>
) : Record

data class ProjectRecord(
    override @Field val id: String? = null,
    override @Field val title: String? = null,
    override @Field val deeplink: String? = null,
    @Field val status: String? = null,
    @Field val createddate: String? = null,
    @Field val thumbnails: List<ThumbnailRecord>? = null,
    @Field val name: String? = null,
    @Field val createdBy: String? = null,
    @Field val updateddate: String? = null,
    @Field val updatedBy: String? = null,
    @Field val subtype: String? = null,
    @Field val cat: List<String>? = null,
    @Field val clipCount: Long? = null,
    @Field val publisheddate: String? = null,
    @Field val useGaplessPlayback: Boolean? = null,
    @Field val distribution: String? = null,
    @Field val goal: String? = null,
    @Field val useGaplessMetadata: Boolean? = null,
    @Field val useThumbsFromMetadata: String? = null,
    @Field val noIntroClip: Boolean? = null,
    @Field val analysis: String? = null,
    @Field val description: String? = null,
    @Field val author: String? = null,
    @Field val copyright: String? = null,
    @Field val transcript: String? = null,
    @Field val label: String? = null,
    @Field val chapters: List<ChapterRecord>? = null,
    @Field val timelineId: String? = null,
    @Field val timelines: List<TimelineRecord>? = null,
    @Field val mainMediaClipId: String? = null,
    @Field var mainMediaClipData: MediaClipRecord? = null
) : Record, ContentItem(), ContentItemRecordInterface {
    constructor(id: String, title: String? = null, deeplink: String? = null) : this(
        id,
        title,
        deeplink,
        null
    )
}

data class ThumbnailRecord(
    @Field val src: String? = null,
    @Field val width: String? = null,
    @Field val height: String? = null,
    @Field val main: Boolean? = null
) : Record

data class MediaClipRecord(
    override @Field val id: String? = null,
    override @Field val title: String? = null,
    override @Field val deeplink: String? = null,
    @Field val gendeeplink: String? = null,
    @Field val sourcetype: String? = null,
    @Field var length: String? = null,
    @Field val mediatype: String? = null,
    @Field val mediatype_override: String? = null,
    @Field val fitmode: String? = null,
    @Field val usetype: String? = null,
    @Field val useThumbsFromMetadata: String? = null,
    @Field val location: String? = null,
    @Field val originalfilename: String? = null,
    @Field val sourceid: String? = null,
    @Field val description: String? = null,
    @Field val copyright: String? = null,
    @Field val author: String? = null,
    @Field val status: String? = null,
    @Field val createddate: String? = null,
    @Field val updateddate: String? = null,
    @Field val publisheddate: String? = null,
    @Field val width: Long? = null,
    @Field val height: Long? = null,
    @Field val dar: String? = null,
    @Field val originalWidth: Long? = null,
    @Field val originalHeight: Long? = null,
    @Field val date: DatesRecord? = null,
    @Field val src: String? = null,
    @Field val cat: List<String>? = null,
    @Field val thumbnails: List<ThumbnailRecord>? = null,
    @Field val movingThumbnails: List<ThumbnailRecord>? = null,
    @Field val assets: List<MediaAssetRecord>? = null,
    @Field val hasJobs: String? = null,
    @Field val hasFailedJobs: Boolean? = null,
    @Field val hasRunningJobs: Boolean? = null,
    @Field val hasNewJobs: Boolean? = null,
    @Field val transcodingFinished: Boolean? = null,
    @Field val isYoutubeImport: Boolean? = null,
    @Field val subtitles: List<SubtitleRecord>? = null,
    @Field val subtitletracks: List<SubtitleRecord>? = null,
    @Field val transcript: String? = null,
    @Field val timelineId: String? = null,
    @Field val timelines: List<TimelineRecord>? = null,
    @Field val audiotracks: List<AudiotrackRecord>? = null,
    @Field val youtubeImportID: String? = null,
    @Field val importSource: String? = null,
    @Field val importURL: String? = null,
    @Field val disablecommercials: String? = null,
    @Field val isDynamic: String? = null,
    @Field val checkbox: String? = null,
    @Field val comment: String? = null,
    @Field val chapters: List<ChapterRecord>? = null,
    @Field val highlights: List<HighlightRecord>? = null,
    @Field val softEmbargo: String? = null,
    @Field val isOutro: String? = null,
    @Field var projectId: String? = null
) : Record, ContentItem(), ContentItemRecordInterface {
    constructor(
        id: String,
        title: String? = null,
        deeplink: String? = null,
        gendeeplink: String? = null,
        sourcetype: String? = null,
        length: String? = null,
        mediatype: String? = null
    ) : this(id, title, deeplink, gendeeplink, sourcetype, length, mediatype, null)
}

data class MediaClipListRecord(
    override @Field val id: String? = null,
    override @Field val title: String? = null,
    override @Field val deeplink: String? = null,
    @Field val numfound: Long? = null,
    @Field val offset: Long? = null,
    @Field val parentid: String? = null,
    @Field val status: String? = null,
    @Field val publication: List<String>? = null,
    @Field val parentpublicationid: String? = null,
    @Field val mediatype: String? = null,
    @Field val usetype: String? = null,
    @Field val modifieddate: String? = null,
    @Field val createddate: String? = null,
    @Field val publishedDate: String? = null,
    @Field val listtypeString: String? = null,
    @Field val isEmptyBoolean: Boolean? = null,
    @Field val filtersString: String? = null,
    @Field val createdbyString: String? = null,
    @Field val updatedbyString: String? = null,
    @Field val allowDatasource: String? = null,
    @Field val allowDatasource_boolean: Boolean? = null,
    @Field val score: Double? = null,
    @Field val count: Long? = null,
    @Field val items: List<ContentItemRecordInterface>? = null
) : Record, ContentItem(), ContentItemRecordInterface {
    constructor(id: String, title: String? = null, deeplink: String? = null) : this(
        id,
        title,
        deeplink,
        null
    )
}


data class SubtitleRecord(
    @Field var languageid: String? = null,
    @Field var languagename: String? = null,
    @Field var id: String? = null,
    @Field val name: String? = null,
    @Field val default: String? = null,
    @Field var isocode: String? = null,
    @Field var roleFlags: Int? = null,
    @Field val status: String? = null,
    @Field var isSelected: Boolean? = null
) : Record

data class MediaAssetRecord(
    @Field val mediatype: String? = null,
    @Field val id: String? = null,
    @Field val status: String? = null,
    @Field val src: String? = null,
    @Field val length: String? = null,
    @Field val exactlength: String? = null,
    @Field val width: String? = null,
    @Field val height: String? = null,
    @Field val bandwidth: String? = null,
    @Field val jobdefid: String? = null,
    @Field val languageId: String? = null,
    @Field val languageName: String? = null,
    @Field val languageIsocode: String? = null,
    @Field val isDefaultLanguage: Boolean? = null,
    @Field var title: String? = null
) : Record


data class AudiotrackRecord(
    @Field var id: String? = null,
    @Field val type: String? = null,
    @Field val status: String? = null,
    @Field val createddate: String? = null,
    @Field val name: String? = null,
    @Field val createdBy: String? = null,
    @Field val updateddate: String? = null,
    @Field val updatedBy: String? = null,
    @Field var audioId: Int? = null,
    @Field var isocode: String? = null,
    @Field var roleFlags: Int? = null,
    @Field val mediaclipid: String? = null,
    @Field val originalfilename: String? = null,
    @Field val languageid: Long? = null,
    @Field val src: String? = null,
    @Field val remotesrc: String? = null,
    @Field val exactlength: String? = null,
    @Field val publisheddate: String? = null,
    @Field var label: String? = null,
    @Field val uri: String? = null,
    @Field val isDefaultLanguage: Boolean? = null,
    @Field var isSelected: Boolean? = null,
    @Field var origId: String? = null
)

data class HighlightRecord(
    @Field val id: String? = null,
    @Field val title: String? = null,
    @Field val timeOffset: Float? = null
) : Record

data class TimelineRecord(@Field val id: String?) : Record

data class ChapterRecord(
    @Field val id: String? = null,
    @Field val title: String? = null,
    @Field val timeOffset: Float? = null,
    @Field val steps: List<StepRecord>? = null
) : Record

data class StepRecord(
    @Field val id: String? = null,
    @Field val mediaClipId: String? = null,
    @Field val isStart: Boolean? = null,
    @Field var entityType: String? = null,
    @Field var entityId: String? = null
) : Record

data class DatesRecord(
    @Field val created: String? = null,
    @Field val updated: String? = null,
    @Field val published: String? = null
) : Record


data class PlayoutRecord(
    @Field val id: String? = null,
    @Field val main: String? = null,
    @Field val type: String? = null,
    @Field val name: String? = null,
    @Field val status: String? = null,
    @Field val createddate: String? = null,
    @Field val updateddate: String? = null,
    @Field val label: String? = null,
    @Field val publication: String? = null,
    @Field val player: PlayerRecord? = null,
    @Field val playerid: String? = null,
    @Field val centerButtonType: String? = null,
    @Field val cornerRadius: String? = null,
    @Field val responsiveSizing: String? = null,
    @Field val aspectRatio: String? = null,
    @Field val width: String? = null,
    @Field val height: String? = null,
    @Field val autoHeight: String? = null,
    @Field val alphaControlBar: String? = null,
    @Field val skin_backgroundColor: String? = null,
    @Field val skin_foregroundColor: String? = null,
    @Field val skin_widgetColor: String? = null,
    @Field val bgColor: String? = null,
    @Field val logoId: String? = null,
    @Field val logoAlign: String? = null,
    @Field val controlBar: String? = null,
    @Field val controlBarPlacement: String? = null,
    @Field val timeDisplay: String? = null,
    @Field val timeLine: String? = null,
    @Field val muteButton: String? = null,
    @Field val volume: String? = null,
    @Field val volumeOrientation: String? = null,
    @Field val languageSelect: String? = null,
    @Field val qualitySelector: String? = null,
    @Field val playbackRateSelector: String? = null,
    @Field val fullScreen: String? = null,
    @Field val showStartControlBar: String? = null,
    @Field val shareButton: String? = null,
    @Field val shareButtonPause: String? = null,
    @Field val shareButtonEnd: String? = null,
    @Field val shareButtonEmbedCode: String? = null,
    @Field val shareButtonEmail: String? = null,
    @Field val shareButtonFacebook: String? = null,
    @Field val shareButtonLinkedIn: String? = null,
    @Field val shareButtonPinterest: String? = null,
    @Field val shareButtonTwitter: String? = null,
    @Field val shareButtonWhatsApp: String? = null,
    @Field val castButton: String? = null,
    @Field val showBigPlayButton: String? = null,
    @Field val showBigReplayButton: String? = null,
    @Field val title: String? = null,
    @Field val date: String? = null,
    @Field val authorCopyright: String? = null,
    @Field val authorCopyrightAlign: String? = null,
    @Field val authorCopyrightPrefixText: String? = null,
    @Field val autoPlayNext: String? = null,
    @Field val relatedItems: String? = null,
    @Field val relatedItemsPause: String? = null,
    @Field val useDeeplinkForRelatedItems: String? = null,
    @Field val useDeeplinkForRelatedItemsPause: String? = null,
    @Field val exitscreenItemsListId: String? = null,
    @Field val randomizeRelatedItems: String? = null,
    @Field val useDeeplinkForFacebook: String? = null,
    @Field val shareTwitterText: String? = null,
    @Field val sharePlayout: String? = null,
    @Field val skinBehaviour: String? = null,
    @Field val skinOnTimeline: String? = null,
    @Field val nativeControls: String? = null,
    @Field val youTubeHosting: String? = null,
    @Field val youTubeSkinInMainPhase: String? = null,
    @Field val forceNativeFullscreen: String? = null,
    @Field val preferHD: String? = null,
    @Field val nedStatLoggerUrl: String? = null,
    @Field val googleAnalyticsId: String? = null,
    @Field val piwikUrl: String? = null,
    @Field val piwikSiteId: String? = null,
    @Field val disableCookies: String? = null,
    @Field val disableContextMenuNavigate: String? = null,
    @Field val playerSignature: String? = null,
    @Field val playerSignatureLink: String? = null,
    @Field val autoPlay: String? = null,
    @Field val autoMute: String? = null,
    @Field val autoMuteIfNeededForAutoPlay: String? = null,
    @Field val autoLoop: String? = null,
    @Field val floatPlayer: String? = null,
    @Field val interactivityInView: String? = null,
    @Field val interactivityOutView: String? = null,
    @Field val inviewMargin: String? = null,
    @Field val textAbovePlayer: String? = null,
    @Field val textCommercialSkip: String? = null,
    @Field val startCollapsed: String? = null,
    @Field val playInOverlay: String? = null,
    @Field val hidePlayerOnEnd: String? = null,
    @Field val waitForApproval: String? = null,
    @Field val interactivityMouseIn: String? = null,
    @Field val interactivityMouseOut: String? = null,
    @Field val interactivityOnClick: String? = null,
    @Field val clickURL: String? = null,
    @Field val nsiNoAutoPlay: String? = null,
    @Field val nsiNoPlayer: String? = null,
    @Field val placementOption: String? = null,
    @Field val placementDOMSelector: String? = null,
    @Field val iframeBreakout: String? = null,
    @Field val clearBothOption: String? = null,
    @Field val forceInview: String? = null,
    @Field val customCode: String? = null,
    @Field val preferFlashPlayback: String? = null,
    @Field val preloadMainroll: String? = null,
    @Field val disableHtml5VPAID: String? = null,
    @Field val enableHtml5VPAID: String? = null,
    @Field val commercialPauseButton: String? = null,
    @Field val commercialMuteButton: String? = null,
    @Field var commercialAdIcon: String? = null,
    @Field val commercialProgressBar: String? = null,
    @Field val commercialProgressBarColor: String? = null,
    @Field val commercials: String? = null,
    @Field val textCommercialTimeRemaining: String? = null,
    @Field val commercialBehaviour: String? = null,
    @Field val minClipDurationPreroll: String? = null,
    @Field val minClipDurationPostroll: String? = null,
    @Field val allowBBIma: String? = null,
    @Field val fitmode: FitMode? = null,
    @Field val mobileRotateOnFullScreenMismatch: String? = null,
    @Field val noStats: String? = null,
    @Field val forceAndroidNativeVideo: String? = null,
    @Field val forceIOSNativeVideo: String? = null,
    @Field val use2018Skin: String? = null,
    @Field val useThumbsFromMetadata: String? = null,
    @Field val audioTrackSelect: String? = null,
    @Field val shareText: String? = null,
    @Field val shareButtonDirectLink: String? = null,
    @Field val googleAnalyticsCustomVars: String? = null,
    @Field val supportIABConsent: String? = null,
    @Field val restrictionNpaOnly: String? = null,
    @Field val restrictionNpcOnly: String? = null,
    @Field val defaultSubtitle: String? = null,
    @Field val defaultSubtitleOnlyIfMuted: String? = null,
    @Field val defaultAudioTrack: String? = null,
    @Field val forceCanAutoPlay: String? = null,
    @Field val avoidMutedAutoplay: String? = null,
    @Field val stickyMode: String? = null,
    @Field val disableKeyboardControls: String? = null,
    @Field val taggingDisabled: String? = null,
    @Field val skipOffset: String? = null,
    @Field val skipCounterText: String? = null,
    @Field val skipButtonText: String? = null,
    @Field val blockInsecureVPAID: String? = null,
    @Field val shareButtonGooglePlus: String? = null,
    @Field val timelineId: String? = null,
    @Field val templateId: String? = null,
    @Field val adunits: JsonArray? = null,
    @Field val hasAdunits: Boolean? = null,
    @Field val adunitsPreroll: List<AdUnitRecord>? = null,
    @Field val ignoreSingleMediaResource: String? = null,
    @Field val ignoreProjectMetadata: String? = null,
    @Field val noPosterInExitPhase: String? = null,
    @Field val logProgressAsQuartiles: String? = null,
    @Field val autoPauseAfterPrePhase: String? = null,
    @Field val autoPlayOnlyWithPrerollAd: String? = null,
    @Field val showOnlyWhenPrerollAvailable: String? = null,
    @Field val showBigPauseButtons: String? = null,
    @Field val titlePause: String? = null,
    @Field val authorCopyrightPause: String? = null,
    @Field val authorCopyrightAlignPause: String? = null,
    @Field val authorCopyrightPrefixTextPause: String? = null,
    @Field val showStartDuration: String? = null,
    @Field val disableMovingThumbnail: String? = null,
    @Field val shareButtonHover: String? = null,
    @Field val showBigHoverButtons: String? = null,
    @Field val titleHover: String? = null,
    @Field val authorCopyrightHover: String? = null,
    @Field val titleEnd: String? = null,
    @Field val authorCopyrightEnd: String? = null,
    @Field val softEmbargoCustomPosterClipId: String? = null,
    @Field val softEmbargoFontColor: String? = null,
    @Field val softEmbargoHasCustomPoster: String? = null,
    @Field val softEmbargoText: String? = null,
    @Field val softEmbargoTimerHidden: String? = null,
    @Field val adsystem_buid: String? = null,
    @Field val adsystem_rdid: String? = null,
    @Field val adsystem_idtype: String? = null,
    @Field val adsystem_is_lat: String? = null,
    @Field val swipeDirection: String? = null,
    @Field val hideSwipeControls: String? = null,
    @Field val descriptionShowHide: String? = null,
    @Field val showPlayButton: String? = null,
    @Field val autoLoopClip: String? = null,
    @Field val shortsId: String? = null,
    @Field val adunitId: String? = null,
    @Field val clipAdInterval: String? = null,
    @Field val assetPreloadWindow: String? = null,
    @Field val ctaUrlField: String? = null,
    @Field val ctaButtonText: String? = null,
    @Field val ctaButtonUseAccentColor: String? = null,
    @Field val ctaButtonPosition: String? = null
) : Record

data class PlayerRecord(
    @Field val id: String? = null,
    @Field val name: String? = null,
    @Field val type: String? = null,
    @Field val src: String? = null,
    @Field val updateddate: String? = null
) : Record

data class AdUnitRecord(
    @Field val id: String? = null,
    @Field val type: String? = null,
    @Field val status: String? = null,
    @Field val createddate: String? = null,
    @Field val createdBy: String? = null,
    @Field val updateddate: String? = null,
    @Field val updatedBy: String? = null,
    @Field val positionType: String? = null,
    @Field val positionDisplayType: String? = null,
    @Field val playoutCode: String? = null,
    @Field val title: String? = null,
    @Field val code: String? = null,
    @Field var assignedLineitems: List<String>? = null,
    @Field val label: String? = null,
    @Field var lineitems: List<LineItemRecord>? = null
) : Record

data class LineItemRecord(
    @Field val id: String? = null,
    @Field val type: String? = null,
    @Field val status: String? = null,
    @Field val createddate: String? = null,
    @Field val createdBy: String? = null,
    @Field val updateddate: String? = null,
    @Field val updatedBy: String? = null,
    @Field val creativeType: String? = null,
    @Field val creativeId: String? = null,
    @Field val timeout: Long? = null,
    @Field val preferredPlayMode: String? = null,
    @Field val playout: Map<String, String?>? = null,
    @Field val title: String? = null,
    @Field val code: String? = null,
    @Field val vastUrl: String? = null,
    @Field val vastSubtype: String? = null,
    @Field val label: String? = null,
    @Field val relatedAdUnits: JsonArray? = null
) : Record

interface ContentItemRecordInterface {
    @Field
    val id: String?
    @Field
    val title: String?
    @Field
    val deeplink: String?
}

